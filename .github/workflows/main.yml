name: deploy

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  # build the backend
  deploy-backend:
    env:
      # vars needed to upload lambda function
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_LAMBDA_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_LAMBDA_SECRET_KEY }}
      # used for auth
      fintrak_token: ${{ secrets.FINTRAK_TOKEN }}
      # user for db access
      fintrak_dbtablename: ${{ secrets.AWS_DYNAMO_TABLE_NAME }}
      fintrak_dynamoaccess: ${{ secrets.AWS_DYNAMO_ACCESS_KEY_ID }}
      fintrak_dynamosecret: ${{ secrets.AWS_DYNAMO_SECRET_KEY }}
  
    runs-on: ubuntu-latest

    steps:
      # setup
      - name: Check-out repo
        uses: actions/checkout@v3

      - name: Install AWS CLI
        uses: unfor19/install-aws-cli-action@v1.0.3
        
      # build app and update db
      - name: Build backend
        working-directory: ./backend
        run: |
          dotnet publish --output "./bin/publish" --configuration "Release" --framework "net6.0" /p:GenerateRuntimeConfigurationFiles=true --runtime linux-x64 --self-contained false
        
      # deploy to lambda
      - name: Zip backend
        working-directory: ./backend/bin/publish
        run: zip backend.zip *
          
      - name: Update Lambda env vars
        working-directory: ./backend/bin/publish
        run: aws lambda update-function-configuration --function-name FintrakBackend --region us-east-1 --environment "Variables={fintrak_envname=LAMBDA,fintrak_token=$fintrak_token,fintrak_dbtablename=$fintrak_dbtablename,fintrak_dynamoaccess=$fintrak_dynamoaccess,fintrak_dynamosecret=$fintrak_dynamosecret}"

      - name: Upload zip to Lambda
        working-directory: ./backend/bin/publish
        run: aws lambda update-function-code --function-name FintrakBackend --zip-file fileb://backend.zip --region us-east-1
          
  # build the frontend
  deploy-frontend:
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_S3_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_S3_SECRET_KEY }}
      AWS_S3_BUCKETNAME: ${{ secrets.AWS_S3_BUCKETNAME }}
      AWS_CLOUDFRONT_DISTID: ${{ secrets.AWS_CLOUDFRONT_DISTID }}
      AWS_DEFAULT_REGION: us-east-1

    runs-on: ubuntu-latest

    steps:
      # setup
      - name: Check-out repo
        uses: actions/checkout@v3

      - name: Install AWS CLI
        uses: unfor19/install-aws-cli-action@v1.0.3

      - name: Install NPM
        uses: actions/setup-node@v3
        with:
          node-version: 16

      # build app
      - name: Restore NPM packages
        working-directory: ./frontend
        run: npm install

      - name: Build app
        working-directory: ./frontend
        run: npm run build

      # deploy to S3
      - name: Clean the bucket
        run: aws s3 rm s3://$AWS_S3_BUCKETNAME --recursive

      - name: Upload dist to S3
        working-directory: ./frontend/dist
        run: aws s3 sync . s3://$AWS_S3_BUCKETNAME

      - name: Invalidate cache
        run: aws cloudfront create-invalidation --distribution-id $AWS_CLOUDFRONT_DISTID --paths "/*"
